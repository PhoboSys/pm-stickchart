import { RenderingContext } from '@rendering';
import { Container } from '../../../lib/pixi';
import { BasePredictionsRenderer } from './BasePredictionsRenderer';
export declare class PredictionTile extends BasePredictionsRenderer {
    static readonly PREDICTION_TILE_ID: symbol;
    get rendererId(): symbol;
    private avatarResolvers;
    private groupStyle;
    private contentStyle;
    private wagerContainerBaseStyles;
    private wagerContainerMobileBaseStyles;
    private wagerOrphanContainerStyles;
    private wagerOrphanContainerMobileStyles;
    private wagerContainerStyles;
    private wagerContainerMobileStyles;
    private wagerTextStyle;
    private wagerStyle;
    private profitContainerStyle;
    private profitContainerMobileStyle;
    private profitBorderBottomStyle;
    private profitBorderBottomMobileStyle;
    private profitTextStyle;
    private percentStyle;
    private payoutStyle;
    private claimStyle;
    private claimMobileStyle;
    private claimBorderBottomStyle;
    private claimBorderBottomMobileStyle;
    private claimTextStyle;
    private positionIconCircleStyle;
    private positionIconStyle;
    private profitCurrencyIconStyle;
    private avatarStyle;
    private wagerCurrencyIconContainerStyle;
    private wagerCurrencyCircleStyle;
    private wagerCurrencyIconStyle;
    private validPredictionPositions;
    private configAnimations;
    protected get animations(): any;
    protected updatePrediction(round: any, prediction: any, context: RenderingContext, container: Container): void;
    private getGroupPosition;
    private renderGroup;
    private updatePositionIcon;
    private updateProfit;
    private updateClaim;
    private updateWager;
    private updateWagerCurrencyIcon;
    private getPositionIconTextureName;
    private getPredictionCurrencyIconTextureName;
    private createIcon;
    private createProfitCurrencyIcon;
    private createAvatar;
    private createContainer;
    private createProfitContainer;
    private createClaim;
    private createClaimFragment;
    private createPropagatingContainer;
    private createPropagatingBackground;
    private createContainerBorderBottom;
}
