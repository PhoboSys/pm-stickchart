import { Application, RenderTexture } from '../../lib/pixi';
import { ITextureStorage } from '../abstraction';
import { DOWN_WAGET_TEXTURE, UP_WAGET_TEXTURE, ETH_DARK_TEXTURE, USDT_DARK_TEXTURE, USDC_TEXTURE, PARI_TEXTURE, UNKNOWN_DARK_TEXTURE, CHAINLINK_TEXTURE, WINNING_COUNTDOWN_TEXTURE, PRICE_LINE_TEXTURE, LOCK_COUNTDOWN_TEXTURE, RESOLUTION_COUNTDOWN_TEXTURE, SILVER_LEVEL_TEXTURE, GOLD_LEVEL_TEXTURE, ROYAL_LEVEL_TEXTURE, UP_ICON_TEXTURE, DOWN_ICON_TEXTURE, ZERO_ICON_TEXTURE, UP_ICON_TEXTURE_OUTDATED, DOWN_ICON_TEXTURE_OUTDATED, ZERO_ICON_TEXTURE_OUTDATED, UNDEFINED_ICON_TEXTURE, GRADIENT_TEXTURE, POOL_CLAIM_TEXTURE, WIN_ICON_TEXTURE } from './symbols';
export declare class TextureStorage implements ITextureStorage {
    private readonly application;
    private readonly textures;
    private readonly precreate;
    constructor(application: Application);
    get(name: symbol, params?: object): RenderTexture;
    private EMPTY;
    private [UP_WAGET_TEXTURE];
    private [DOWN_WAGET_TEXTURE];
    private [PRICE_LINE_TEXTURE];
    private [POOL_CLAIM_TEXTURE];
    private [UP_ICON_TEXTURE];
    private [DOWN_ICON_TEXTURE];
    private [ZERO_ICON_TEXTURE];
    private [UP_ICON_TEXTURE_OUTDATED];
    private [DOWN_ICON_TEXTURE_OUTDATED];
    private [ZERO_ICON_TEXTURE_OUTDATED];
    private [UNDEFINED_ICON_TEXTURE];
    private [GRADIENT_TEXTURE];
    private [SILVER_LEVEL_TEXTURE];
    private [GOLD_LEVEL_TEXTURE];
    private [ROYAL_LEVEL_TEXTURE];
    private [RESOLUTION_COUNTDOWN_TEXTURE];
    private [LOCK_COUNTDOWN_TEXTURE];
    private [WINNING_COUNTDOWN_TEXTURE];
    private [ETH_DARK_TEXTURE];
    private [USDT_DARK_TEXTURE];
    private [USDC_TEXTURE];
    private [PARI_TEXTURE];
    private [UNKNOWN_DARK_TEXTURE];
    private [CHAINLINK_TEXTURE];
    private [WIN_ICON_TEXTURE];
}
