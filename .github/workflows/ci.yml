name: Deploy Stickchart to CodeArtifact

on:
  push:
    branches:
      - master
      - staging


jobs:
  Deploy:
    name: Deploy stickchart to AWS CodeArtifact
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Use Node.js ${{ vars.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
       node-version: ${{ vars.NODE_VERSION }}

    - name: Install packages
      run: |
        npm install
        npm audit fix || true

    - name: Production build
      run: |
        npm run build

    # - name: Test installing pm-stickchart package
    #   run: |
    #     npm install pm-stickchart

    - name: Push package to Amazon CodeArtifact
      run: |
        export VER=$(aws secretsmanager get-secret-value                 \
        --secret-id general | jq -r '.SecretString'                      \
        | jq .STICKCHART_VERSION | tr -d \"  )


        if [[ "${{  github.ref_name }}" == "master" ]]; then
          VER=$(echo $VER | awk -F. -v OFS=. '{$NF += 1 ; print}')
          NEW_SECRET=$(aws secretsmanager get-secret-value                                      \
          --secret-id general | jq -r '.SecretString'                              \
          | jq ". += {\"STICKCHART_VERSION\":\"$VER\"}")
          aws secretsmanager update-secret --secret-id general --secret-string "$NEW_SECRET"

        elif [[ "${{  github.ref_name }}" == "staging" ]]; then
          VER="$VER@${GITHUB_SHA:0:9}"
        fi

        jq ". += {\"version\":\"$VER\"}" package.json > new_pj
        mv new_pj package.json
        npm init --scope=@Phobosys
        npm publish --access public


